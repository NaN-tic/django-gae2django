diff -r a2d5c409a0ee upload.py
--- rietveld.hg/upload.py	Wed Feb 13 13:29:29 2013 -0500
+++ upload.py	Fri Apr 26 18:10:30 2013 +0200
@@ -297,7 +297,7 @@
                               response.headers, response.fp)
     self.authenticated = True
 
-  def _Authenticate(self):
+  def _Authenticate(self, err):
     """Authenticates the user.
 
     The authentication process works as follows:
@@ -379,8 +379,10 @@
     """
     # TODO: Don't require authentication.  Let the server say
     # whether it is necessary.
-    if not self.authenticated:
-      self._Authenticate()
+    # Skip this check for Django, we need a 401 to get the login
+    # URL (could be anywhere...).
+    #if not self.authenticated:
+    #  self._Authenticate()
 
     old_timeout = socket.getdefaulttimeout()
     socket.setdefaulttimeout(timeout)
@@ -423,9 +425,42 @@
 class HttpRpcServer(AbstractRpcServer):
   """Provides a simplified RPC-style interface for HTTP requests."""
 
-  def _Authenticate(self):
+  def _Authenticate(self, login_url="/accounts/login/"):
     """Save the cookie jar after authentication."""
-    super(HttpRpcServer, self)._Authenticate()
+    login_url = "%s%s" % (self.host, login_url)
+    print "Login URL: %r" % login_url
+    username = raw_input("Username: ")
+    password = getpass.getpass("Password: ")
+    fields = (("user_name", username), ("password", password))
+    req = self._CreateRequest(
+        url=login_url,
+        data=urllib.urlencode({
+            "username": username,
+            "password": password,
+        })
+    )
+    try:
+      response = self.opener.open(req)
+      #response_body = response.read()
+      #response_dict = dict(x.split("=")
+      #                     for x in response_body.split("\n") if x)
+      ErrorExit("Login failed.")
+      #return response_dict["Auth"]
+    except urllib2.HTTPError, e:
+      if e.code == 302:
+        self.cookie_jar.extract_cookies(e, req)
+        if self.save_cookies:
+          self.cookie_jar.save()
+        self.authenticated = True
+        return
+      elif e.code == 403:
+        body = e.read()
+        response_dict = dict(x.split("=", 1) for x in body.split("\n") if x)
+        raise ClientLoginError(req.get_full_url(), e.code, e.msg,
+                               e.headers, response_dict)
+      else:
+        raise
+
     if self.save_cookies:
       StatusUpdate("Saving authentication cookies to %s" % self.cookie_file)
       self.cookie_jar.save()
@@ -670,23 +705,7 @@
     A new HttpRpcServer, on which RPC calls can be made.
   """
 
-  # If this is the dev_appserver, use fake authentication.
   host = (host_override or server).lower()
-  if re.match(r'(http://)?localhost([:/]|$)', host):
-    if email is None:
-      email = "test@example.com"
-      logging.info("Using debug user %s.  Override with --email" % email)
-    server = HttpRpcServer(
-        server,
-        lambda: (email, "password"),
-        host_override=host_override,
-        extra_headers={"Cookie":
-                       'dev_appserver_login="%s:False"' % email},
-        save_cookies=save_cookies,
-        account_type=account_type)
-    # Don't try to talk to ClientLogin.
-    server.authenticated = True
-    return server
 
   return HttpRpcServer(server,
                        KeyringCreds(server, host, email).GetUserCredentials,
diff -r ee6a3546f960 templates/use_uploadpy.html
--- a/templates/use_uploadpy.html	Fri Apr 26 19:15:43 2013 +0200
+++ b/templates/use_uploadpy.html	Sun Apr 28 22:49:40 2013 +0200
@@ -2,23 +2,29 @@
 
 {%block body%}
 <h1>Tired of uploading files through the form?</h1>
+
+<p>You have two forms to upload the files:</p>
+
+<ul>
+<li>
+<p>Use <a href="https://bitbucket.org/nantic/hgreview" target="blank">hgreview</a> (It's a <a href="https://bitbucket.org/nicoe/hgreview">Nicoe</a>'s fork, with some modifications)
+</li>
+<li>
 <p>Download <a href="{%url codereview.views.customized_upload_py%}">upload.py</a>, a simple tool for
 uploading diffs from a version control system to the codereview app.</p>
-
 <p><strong>Usage summary:</strong>
 <pre>upload.py [options] [-- diff_options]</pre></p>
-
 <p>Diff options are passed to the diff command of the underlying system.</p>
-
 <p><strong>Supported version control systems:</strong></p>
 <ul>
   <li>Subversion</li>
   <li>Git</li>
   <li>Mercurial</li>
 </ul>
-
 <p><a href="http://code.google.com/p/rietveld/wiki/UploadPyUsage"
       target="_blank">Read more</a> about this script.</p>
+</li>
+</ul>
 
 <div style="margin-top: 1.5em;">
 <form method="POST" action="{%url codereview.views.use_uploadpy%}">
